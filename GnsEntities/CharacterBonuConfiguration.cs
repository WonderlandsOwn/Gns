// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace GnsEntities
{

    // CharacterBonus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class CharacterBonuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CharacterBonu>
    {
        public CharacterBonuConfiguration()
            : this("dbo")
        {
        }

        public CharacterBonuConfiguration(string schema)
        {
            ToTable("CharacterBonus", schema);
            HasKey(x => x.CharacterId);

            Property(x => x.CharacterId).HasColumnName(@"CharacterId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CharacterBaseHealth).HasColumnName(@"CharacterBaseHealth").HasColumnType("int").IsRequired();
            Property(x => x.CharacterCurrentHealth).HasColumnName(@"CharacterCurrentHealth").HasColumnType("int").IsRequired();
            Property(x => x.CharacterBaseStamina).HasColumnName(@"CharacterBaseStamina").HasColumnType("int").IsRequired();
            Property(x => x.CharacterCurrentStamina).HasColumnName(@"CharacterCurrentStamina").HasColumnType("int").IsRequired();
            Property(x => x.CharacterBaseStrength).HasColumnName(@"CharacterBaseStrength").HasColumnType("int").IsRequired();
            Property(x => x.CharacterBaseAgility).HasColumnName(@"CharacterBaseAgility").HasColumnType("int").IsRequired();
            Property(x => x.CharacterBaseIntellect).HasColumnName(@"CharacterBaseIntellect").HasColumnType("int").IsRequired();
            Property(x => x.CharacterBaseBlock).HasColumnName(@"CharacterBaseBlock").HasColumnType("int").IsRequired();
            Property(x => x.CharacterBaseDodge).HasColumnName(@"CharacterBaseDodge").HasColumnType("int").IsRequired();
            Property(x => x.CharacterBaseResist).HasColumnName(@"CharacterBaseResist").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Character).WithOptional(b => b.CharacterBonu).WillCascadeOnDelete(false); // FK_CharacterStatus_Character
        }
    }

}
// </auto-generated>
