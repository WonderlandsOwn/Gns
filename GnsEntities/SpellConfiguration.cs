// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace GnsEntities
{

    // Spell
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class SpellConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Spell>
    {
        public SpellConfiguration()
            : this("dbo")
        {
        }

        public SpellConfiguration(string schema)
        {
            ToTable("Spell", schema);
            HasKey(x => x.SpellId);

            Property(x => x.SpellId).HasColumnName(@"SpellId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SpellName).HasColumnName(@"SpellName").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(24);
            Property(x => x.SpellDamage).HasColumnName(@"SpellDamage").HasColumnType("int").IsOptional();
            Property(x => x.SpellDamageTypeId).HasColumnName(@"SpellDamageTypeId").HasColumnType("int").IsOptional();
            Property(x => x.SpellCoolDown).HasColumnName(@"SpellCoolDown").HasColumnType("int").IsRequired();
            Property(x => x.SpellCost).HasColumnName(@"SpellCost").HasColumnType("int").IsRequired();
            Property(x => x.SpellResourceId).HasColumnName(@"SpellResourceId").HasColumnType("int").IsOptional();
            Property(x => x.SpellTargetId).HasColumnName(@"SpellTargetId").HasColumnType("int").IsRequired();
        }
    }

}
// </auto-generated>
