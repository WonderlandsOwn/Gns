// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace GnsEntities
{


    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class GnsDbContext : System.Data.Entity.DbContext, IGnsDbContext
    {
        public System.Data.Entity.DbSet<Archtype> Archtypes { get; set; } // Archtype
        public System.Data.Entity.DbSet<ArchtypeBonu> ArchtypeBonus { get; set; } // ArchtypeBonus
        public System.Data.Entity.DbSet<Character> Characters { get; set; } // Character
        public System.Data.Entity.DbSet<CharacterBonu> CharacterBonus { get; set; } // CharacterBonus
        public System.Data.Entity.DbSet<CharacterSpell> CharacterSpells { get; set; } // CharacterSpell
        public System.Data.Entity.DbSet<Player> Players { get; set; } // Player
        public System.Data.Entity.DbSet<Rank> Ranks { get; set; } // Rank
        public System.Data.Entity.DbSet<Rarity> Rarities { get; set; } // Rarity
        public System.Data.Entity.DbSet<Spell> Spells { get; set; } // Spell
        public System.Data.Entity.DbSet<SpellDetail> SpellDetails { get; set; } // SpellDetail
        public System.Data.Entity.DbSet<Unlock> Unlocks { get; set; } // Unlock

        static GnsDbContext()
        {
            System.Data.Entity.Database.SetInitializer<GnsDbContext>(null);
        }

        public GnsDbContext()
            : base("Name=GnsConnectionString")
        {
        }

        public GnsDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public GnsDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public GnsDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public GnsDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ArchtypeConfiguration());
            modelBuilder.Configurations.Add(new ArchtypeBonuConfiguration());
            modelBuilder.Configurations.Add(new CharacterConfiguration());
            modelBuilder.Configurations.Add(new CharacterBonuConfiguration());
            modelBuilder.Configurations.Add(new CharacterSpellConfiguration());
            modelBuilder.Configurations.Add(new PlayerConfiguration());
            modelBuilder.Configurations.Add(new RankConfiguration());
            modelBuilder.Configurations.Add(new RarityConfiguration());
            modelBuilder.Configurations.Add(new SpellConfiguration());
            modelBuilder.Configurations.Add(new SpellDetailConfiguration());
            modelBuilder.Configurations.Add(new UnlockConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ArchtypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ArchtypeBonuConfiguration(schema));
            modelBuilder.Configurations.Add(new CharacterConfiguration(schema));
            modelBuilder.Configurations.Add(new CharacterBonuConfiguration(schema));
            modelBuilder.Configurations.Add(new CharacterSpellConfiguration(schema));
            modelBuilder.Configurations.Add(new PlayerConfiguration(schema));
            modelBuilder.Configurations.Add(new RankConfiguration(schema));
            modelBuilder.Configurations.Add(new RarityConfiguration(schema));
            modelBuilder.Configurations.Add(new SpellConfiguration(schema));
            modelBuilder.Configurations.Add(new SpellDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new UnlockConfiguration(schema));
            return modelBuilder;
        }
    }
}
// </auto-generated>
