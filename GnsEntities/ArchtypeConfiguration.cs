// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace GnsEntities
{

    // Archtype
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class ArchtypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Archtype>
    {
        public ArchtypeConfiguration()
            : this("dbo")
        {
        }

        public ArchtypeConfiguration(string schema)
        {
            ToTable("Archtype", schema);
            HasKey(x => x.ArchtypeId);

            Property(x => x.ArchtypeId).HasColumnName(@"ArchtypeId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ArchtypeRankId).HasColumnName(@"ArchtypeRankId").HasColumnType("int").IsOptional();
            Property(x => x.ArchtypeName).HasColumnName(@"ArchtypeName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(24);
            Property(x => x.ArchtypeShortDescription).HasColumnName(@"ArchtypeShortDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ArchtypeDescription).HasColumnName(@"ArchtypeDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.ArchtypeUnlockId).HasColumnName(@"ArchtypeUnlockId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Rank).WithMany(b => b.Archtypes).HasForeignKey(c => c.ArchtypeRankId).WillCascadeOnDelete(false); // FK_Archtype_Rank
            HasOptional(a => a.Unlock).WithMany(b => b.Archtypes).HasForeignKey(c => c.ArchtypeUnlockId).WillCascadeOnDelete(false); // FK_Archtype_Unlock
            HasMany(t => t.Spells).WithMany(t => t.Archtypes).Map(m =>
            {
                m.ToTable("ArchtypeSpellList", "dbo");
                m.MapLeftKey("ArchtypeId");
                m.MapRightKey("SpellId");
            });
        }
    }

}
// </auto-generated>
